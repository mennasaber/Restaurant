/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant_system;

import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author NONA
 */
public class Orders_Container extends javax.swing.JPanel {

    FlowLayout Grid = new FlowLayout();
    customer user;

    /**
     * Creates new form Orders_Container
     */
    public Orders_Container(customer user) {
        initComponents();
        this.user = user;
        load_orders(this.user.getId());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(935, 491));
        setMinimumSize(new java.awt.Dimension(935, 491));
        setPreferredSize(new java.awt.Dimension(935, 491));
        setLayout(null);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2));
        jPanel2.setPreferredSize(new java.awt.Dimension(386, 504));
        add(jPanel2);
        jPanel2.setBounds(270, 70, 386, 370);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Update Orders");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(397, 455, 133, 25);

        jLabel1.setBackground(new java.awt.Color(244, 108, 108));
        jLabel1.setFont(new java.awt.Font("Castellar", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Running Orders....");
        add(jLabel1);
        jLabel1.setBounds(250, 10, 450, 43);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        load_orders(this.user.getId());
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void load_orders(int id_user) {
        try {
            jPanel2.removeAll();
            jPanel2.revalidate();
            jPanel2.repaint();
            set_con.setconnection();
            PreparedStatement statment = set_con.con.prepareStatement("select * from order_ where cus_id=?");
            statment.setInt(1, id_user);
            ResultSet result = statment.executeQuery();
            while (result.next()) {
                String time1 = String.valueOf(result.getTime("time"));
                String time2 = String.valueOf(LocalTime.now());
                SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
                try {
                    Date date1 = format.parse(time1);
                    Date date2 = format.parse(time2);
                    long difference = date2.getTime() - date1.getTime();
                    if (difference / 60000 < 10) {
                        System.out.println(difference/60000);
                       order ord = new order(String.valueOf(result.getInt("order_id")),result.getInt("cus_id"),result.getFloat("total"),
                                result.getFloat("balance"), result.getInt("delivery_id"),result.getFloat("delivery_charge"),result.getTime("time"), null);
                         Orders o = new Orders(ord);
                        GridBagConstraints gs = new GridBagConstraints();
                        jPanel2.add(o, gs);
                        o.setVisible(true);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(Orders_Container.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            set_con.con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Orders_Container.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
